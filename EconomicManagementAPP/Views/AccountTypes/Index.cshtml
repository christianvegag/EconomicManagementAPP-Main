@model IEnumerable<AccountType>

@{
    ViewData["Title"] = "Account Types";
}

<h1>Account Types</h1>

<a class="btn btn-success" asp-action="Create">
     <i class="bi bi-plus-circle-fill"></i><span>New AccountType</span></a>
     
<table class="mt-2 table">
    <thead>
        <tr>
            <th>Actions</th>
            <th>Name</th>
        </tr>
    </thead>
    <tbody id="reordenable">
        @foreach (var accountTypes in Model)
        {
            <tr>
                <td>
                    <input type="hidden" value="@accountTypes.Id" class="ids" />
                    <a class="btn btn-primary" asp-action="Modify" asp-route-id="@accountTypes.Id">Modify</a>
                    <a class="btn btn-danger" asp-action="Delete" asp-route-id="@accountTypes.Id">Delete</a>
                </td>
                <td>
                    @accountTypes.Name
                </td>

            </tr>
        }
    </tbody>
</table>

@section Scripts {
      <script>
          const urlOrder = '@Url.Action("OrderAccountTypes")';

          $(function(){
              $("#reordenable").sortable({
                  stop: async function(e, ui){
                      await updateOrder();
                  }
              });

              async function updateOrder(){
                  const ids = getIdsElements();
                  await sendIdsBackend(ids);
              }

              function getIdsElements(){
                  const ids = $(".ids").map(function(){
                      return $(this).val();
                  }).get();

                  return ids;
              }

              async function sendIdsBackend(ids){
                  var data = JSON.stringify(ids);

                  await fetch(urlOrder, {
                      method: 'POST',
                      body: data,
                      headers: {
                          'Content-Type': 'application/json'
                      }
                  });
              }
          })
                   
          
      </script>
  }